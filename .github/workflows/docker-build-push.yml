name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/shamhi/hamsterkombatbot:latest

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}

      - name: Build Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Run container for testing
        run: |
          echo API_ID=API_ID >> .env
          echo API_HASH=API_HASH >> .env
          docker run -d --name HamsterKombatBot --env-file .env -v "$(pwd)/sessions:/app/sessions" -v "$(pwd)/proxies.txt:/app/proxies.txt" ${{ steps.build.outputs.tags }} python3 main.py -a -1

      - name: Check container status
        run: |
          sleep 10
          container_status=$(docker inspect -f '{{.State.Status}}' HamsterKombatBot)
          if [ "$container_status" != "running" ]; then
            echo "Container is not running. Exiting."
            docker logs HamsterKombatBot
            docker rm -f HamsterKombatBot
            exit 1
          fi

      - name: Stop and remove test container
        run: |
          docker rm -f HamsterKombatBot

      - name: Push Docker image
        if: success()
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Scan image for vulnerabilities
        if: success()
        uses: anchore/scan-action@v3
        with:
          image: ${{ env.IMAGE_NAME }}:${{ github.sha }}
          fail-build: true
